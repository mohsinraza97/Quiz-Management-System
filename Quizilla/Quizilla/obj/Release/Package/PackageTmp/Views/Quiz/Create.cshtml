@model Quizilla.Models.Quiz

@{
    ViewBag.Title = "Quizzes";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        <div class="alert alert-info alert-dismissible fade in">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>Info!</strong> Duration provided will be considered as minutes.
        </div>

        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger alert-dismissible fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Error!</strong> @ViewBag.Error
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.QuizId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-inline">
                    @Html.TextBoxFor(model => model.QuizId, new { @class = "form-control", placeholder = "e.g. eXsJ5i", @onkeypress = "return AvoidSpace(event);", id = "QuizId", maxlength = "6" })
                    <input style="outline: none;" type="button" id="btnGenerate" value="Generate" class="btn btn-link" />
                </div>
                @Html.ValidationMessageFor(model => model.QuizId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CourseId, (IEnumerable<SelectListItem>)ViewBag.Course, "-- Select course --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", placeholder = "Enter quiz title", maxlength = "50" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Duration, new { @class = "form-control", placeholder = "e.g. 30", @onkeypress = "return AvoidSpace(event);" })
                @*<small><em>Duration provided will be considered as minutes</em>.</small>*@
                @Html.ValidationMessageFor(model => model.Duration)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date, "{0:dd-MMM-yyyy}", new { @class = "form-control", @type = "date", min = Convert.ToDateTime(@DateTime.Now).ToString("yyyy-MM-dd") })
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instructions, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Instructions, new { @class = "form-control", rows = "5", cols = "5", placeholder = "e.g. Choose the correct answer. Each question is of 1 mark." })
                @Html.ValidationMessageFor(model => model.Instructions)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PassingMarks, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PassingMarks, new { @class = "form-control", placeholder = "e.g. 10", @onkeypress = "return AvoidSpace(event);" })
                @Html.ValidationMessageFor(model => model.PassingMarks)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaximumMarks, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.MaximumMarks, new { @class = "form-control", placeholder = "e.g. 20", @onkeypress = "return AvoidSpace(event);" })
                @Html.ValidationMessageFor(model => model.MaximumMarks)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back to Quizzes", "Index", null, new { @class = "btn btn-link" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function AvoidSpace(event) {
            var k = event ? event.which : window.event.keyCode;
            if (k == 32) return false;
        }
    
        $("#btnGenerate").click(function () {
            var alphaNumeric = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            var text = "";
            for (var i = 0; i < 6; i++) {
                text += alphaNumeric.charAt(Math.floor(Math.random() * alphaNumeric.length));
            }
            $("#QuizId").val(text);
            $("#QuizId").focus();
        });
    </script>
}
