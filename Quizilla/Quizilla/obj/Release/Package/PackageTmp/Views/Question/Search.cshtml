@using PagedList.Mvc
@model PagedList.IPagedList<Quizilla.Models.Question>

@{
    ViewBag.Title = "Questions";
}

<h2>Search</h2>

@if (Model.Count() == 0 && ViewBag.Error != null)
{
    <div style="font-size: medium;">@ViewBag.Error</div>
    <div>
        @Html.ActionLink("Back", "Index", new { id = ViewBag.QuizId }, new { @class = "btn btn-primary" })
    </div>
}
else if (Model.Count() != 0 && ViewBag.Error == null)
{
    <h4 style="font-size: medium;">Keyword: @ViewBag.Search</h4>
    @Html.Partial("QuestionPartial", Model)
    if (Model.Count() > 5 || Model.PageCount > 1)
    {
        <span>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</span>
        @Html.PagedListPager(Model, page => Url.Action("Search", "Question", new { id = ViewBag.QuizId, search = ViewBag.Search, page = page }))
    }
    <div>
        @Html.ActionLink("Back to Questions", "Index", new { id = ViewBag.QuizId })
    </div>
}

@section Scripts {
    <script>
        var textToHighligt = '@ViewBag.Search'; //<---put in quotes
        $("td:contains(" + textToHighligt + ")").css("background-color", "yellow");
    </script>
}