@model Quizilla.Models.LoginViewModel

@{
    ViewBag.Title = "Log in";
}

<h2>Log in</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        @if (ViewBag.Result == false)
        {
            <div class="alert alert-danger alert-dismissible fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Error!</strong> Invalid username, password or type.
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserId, new { @class = "form-control", placeholder = "Enter your username", @onkeypress = "return AvoidSpace(event);", maxlength = "20" })
                @Html.ValidationMessageFor(model => model.UserId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <div class="form-inline">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Enter your password", @onkeypress = "return AvoidSpace(event);", maxlength = "20" })
                    <a href="~/Account/ForgotPassword" style="outline: none;" class="btn btn-link" tabindex="-1">Forgot?</a>
                </div>
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        @{
            List<SelectListItem> typeDropDownItems = new List<SelectListItem>
            {
                new SelectListItem { Text = "Teacher", Value="Teacher" },
                new SelectListItem { Text = "Student", Value="Student" }
            };
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("Type", new SelectList(typeDropDownItems, "Value", "Text"),
                "-- Select type --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.RememberMe)
                    @Html.LabelFor(model => model.RememberMe)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Log in" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    Don't have an account? @Html.ActionLink("Register", "Register")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function AvoidSpace(event) {
            var k = event ? event.which : window.event.keyCode;
            if (k == 32) return false;
        }
    </script>
}
