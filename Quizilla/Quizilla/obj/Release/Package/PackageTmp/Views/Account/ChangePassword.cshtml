@model Quizilla.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "Change password";
}

<h2>Change password</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        @if (ViewBag.Result == true)
        {
            <div class="alert alert-success alert-dismissible fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Success!</strong> Your password has been changed.
            </div>
        }
        else if (ViewBag.Result == false)
        {
            <div class="alert alert-danger alert-dismissible fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Error!</strong> Incorrect current password.
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control", placeholder = "Enter your current password", @onkeypress = "return AvoidSpace(event);", maxlength = "20" })
                @Html.ValidationMessageFor(model => model.OldPassword)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", placeholder = "Enter your new password", @onkeypress = "return AvoidSpace(event);", maxlength = "20" })
                @Html.ValidationMessageFor(model => model.NewPassword)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Re-enter your new password", @onkeypress = "return AvoidSpace(event);", maxlength = "20" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Change password" class="btn btn-primary" />
                @Html.ActionLink("Cancel", "Dashboard", "Home", null, new { @class = "btn btn-link" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function AvoidSpace(event) {
            var k = event ? event.which : window.event.keyCode;
            if (k == 32) return false;
        }
    </script>
}
